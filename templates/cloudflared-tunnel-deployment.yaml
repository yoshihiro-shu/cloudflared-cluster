---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflared.fullname" . }}-tunnel
  labels:
    {{- include "cloudflared.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{ include "cloudflared.tunnelSelectorLabels" . | nindent 6 }}
  replicas: 2 # You could also consider elastic scaling for this deployment
  template:
    metadata:
      labels:
        {{ include "cloudflared.tunnelSelectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ include "cloudflared.fullname" . }}-tunnel
        image: {{ .Values.cloudflared.image }}:{{ .Values.cloudflared.tag }}
        args:
        - tunnel
        # Points cloudflared to the config file, which configures what
        # cloudflared will actually do. This file is created by a ConfigMap
        # below.
        - --config
        - /etc/cloudflared/config/config.yaml
        - run
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            # Cloudflared has a /ready endpoint which returns 200 if and only if
            # it has an active connection to the edge.
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
        # Each tunnel has an associated "credentials file" which authorizes machines
        # to run the tunnel. cloudflared will read this file from its local filesystem,
        # and it'll be stored in a k8s secret.
        - name: creds
          mountPath: /etc/cloudflared/creds
          readOnly: true
      volumes:
      - name: creds
        secret:
          # By default, the credentials file will be created under ~/.cloudflared/<tunnel ID>.json
          # when you run `cloudflared tunnel create`. You can move it into a secret by using:
          # ```sh
          # kubectl create secret generic tunnel-credentials \
          # --from-file=credentials.json=/Users/yourusername/.cloudflared/<tunnel ID>.json
          # ```
          secretName: {{ .Values.credentialJson.secretName | quote }}
      # Create a config.yaml file from the ConfigMap below.
      - name: config
        configMap:
          name: {{ include "cloudflared.fullname" . }}-tunnel-config-yaml
          items:
          - key: config.yaml
            path: config.yaml
